<?xml version="1.0"?>
<doc>
<assembly>
<name>
xmod-fires
</name>
</assembly>
<members>
<member name="T:xmod_fires.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:xmod_fires.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:xmod_fires.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:xmod_fires.Class1.CheckLogDirectories(System.String)">
 <summary>
 Check directory locations for log file
 </summary>
 <param name="DirName">base directory location (ie: c:\logfile)</param>
 <returns>true or false</returns>
</member>
<member name="M:xmod_fires.Class1.CheckLogFiles(System.String)">
 <summary>
 Check log files
 </summary>
 <param name="DirName">base directory location (ie: c:\logfile)</param>
 <returns>true or false</returns>
</member>
<member name="M:xmod_fires.Class1.grs(System.Int32@)">
 <summary>
 Generate random string of Characters
 </summary>
 <param name="length">INTEGER: length of characters to generate</param>
 <returns>Generate random string of Characters</returns>
</member>
<member name="M:xmod_fires.Class1.TDGV(System.Windows.Forms.DataGridView,System.Int32)">
 <summary>
 Total values from a datagrid
 </summary>
 <param name="xDG">Name of Datagrid</param>
 <param name="xCelIndx">Cell Index value (Integer)</param>
 <returns>the total value of all the results in a datagrid column.</returns>
</member>
<member name="M:xmod_fires.Class1.ELog(System.String,System.String,System.String)">
 <summary>
 Writes to ERROR log file.
 </summary>
 <param name="code">Unique ID</param>
 <param name="msg">Message</param>
 <param name="loc">Directory and File location (ex: "c:\TEST\test.txt")</param>
 <returns>T or F</returns>
</member>
<member name="M:xmod_fires.Class1.getword(System.String)">
 <summary>
 Grab a random word from a text file.
 </summary>
 <param name="FileLocation">Location of the text file</param>
 <returns>random word from a text file.</returns>
</member>
<member name="M:xmod_fires.Class1.CountyToDistrict(System.String)">
 <summary>
 Converts county name to AFC district
 </summary>
 <param name="StringLocation">Location of the string to search for county name(ex. textbox.text contains "Cleburne")</param>
 <returns>INTEGER that represents the AFC district 1-8  if zero(0) then error</returns>
</member>
<member name="M:xmod_fires.Class1.CauseCodeCrossWalk(System.Int32)">
 <summary>
 State Cause Codes converted to Federal Cause Codes
 </summary>
 <param name="StateCode">State Cause Code INTEGER</param>
 <returns>Federal Cause Code INTEGER</returns>
</member>
<member name="M:xmod_fires.Class1.GetMyKey(System.String,System.String)">
 <summary>
 Gets a KEY VALUE from the registry (HKEY_CURRENT_USER) \ subkey \ keysub \ value
 </summary>
 <param name="keySub"></param>
 <param name="keyValue"></param>
 <returns>KEY VALUE</returns>
</member>
<member name="M:xmod_fires.Class1.SetMyKey(System.String,System.String,System.String)">
 <summary>
 Sets a KEY VALUE for the registry (HKEY_CURRENT_USER) \ subkey \ keysub \ value
 </summary>
 <param name="subKey"></param>
 <param name="keySub"></param>
 <param name="keyValue"></param>
 <returns></returns>
</member>
<member name="M:xmod_fires.Class1.GetAvailableFuels(System.String,System.String,System.Int32)">
 <summary>
 Calculate Available Fuels and Total Tons.
 </summary>
 <param name="FType">Fuel Type</param>
 <param name="FLoad">Fuel Load</param>
 <param name="BSize">Burn Size</param>
 <returns></returns>
</member>
<member name="M:xmod_fires.Class1.SmokeCalcFunction(System.Int32@,System.Double@)">
 <summary>
 Smoke Calculation base function
 </summary>
 <param name="xCatDay">Category Day (must be between 1 - 5) (INTEGER)</param>
 <param name="xDistance">Distance (in miles) to the nearest smoke sensitive target (DOUBLE)</param>
 <returns>DOUBLE:  compare this with the total tons to determine if the burn will exceed guidelines.</returns>
</member>
</members>
</doc>
